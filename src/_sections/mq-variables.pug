
details
  summary: h2#creating-media-query-variables Creating media query variables
  :marked
    One of the big features in mq-scss is that you can easily create meaningful media query variables.

    Here is how to do a similar sort of thing using mq-js:

  +demo({
      html: `
include /_modules/btn/btn
.example
  +btn({classes:'-mqVar'})
    | when clicked, turns green at and below a 980px screen width, turns grey above 980px`,
        js: { es6: `
//module js file

//import the mq variable that was created in the setup stage
import mq from "./mq";

//sets up the MQ_btn media queries
const MQ_btn = {
  active: ()=> mq.max('medium'),
  inactive: ()=> mq.min('medium'),
};

document.querySelector('.btn.-mqVar').onclick = function(e){
  e.preventDefault();

  if (MQ_btn.active()){
    this.classList.toggle('-active');
  }

  if (MQ_btn.inactive()){
    this.classList.toggle('-inactive');
  }

})`,

    es5: `
//module js file

//import the mq variable that was created in the setup stage
var mq = require("./mq").mq;

//sets up the MQ_btn media queries
const MQ_btn = {
  active: function() {
    return mq.max('medium');
  },
  inactive: function() {
    return mq.min('medium');
  }
};

document.querySelector('.btn.-mqVar').onclick = function(e){
  e.preventDefault();

  if (MQ_btn.active()){
    this.classList.toggle('-active');
  }

  if (MQ_btn.inactive()){
    this.classList.toggle('-inactive');
  }

})`}
    })
